#!/usr/bin/env python
import errno
import os

from core import shared


SNAPSHOT_REPO_NAME = 'snapshot-repo'


def mkdirp(path):
    try:
        os.makedirs(path, mode=0700)
    except OSError as e:
        if e.errno != errno.EEXIST:
            raise


def main():
    with open('.git/config') as config_file:
        git_config = config_file.read().decode('utf-8')
    proj_config = shared.read_config()
    for app_name in proj_config:
        remote_line = '[remote "{0}"]'.format(app_name)
        if remote_line in git_config:
            return
        data_dir = os.path.join(shared.dirs.user_data_dir, app_name)
        mkdirp(data_dir)

        with shared.chdir(data_dir):
            shared.run_cmd('git init ' + SNAPSHOT_REPO_NAME)
            with shared.chdir(SNAPSHOT_REPO_NAME):
                with open('.git/config', 'a') as config_file:
                    config_file.write(u"""\
[receive]
\tdenyCurrentBranch = ignore
""".encode('utf-8'))

        snapshot_repo = os.path.join(data_dir, SNAPSHOT_REPO_NAME)

        shared.run_cmd(
            'cp cotton/core/files/post-receive \'{0}\''.format(
                os.path.join(snapshot_repo, '.git/hooks')
            )
        )

        with open('.git/config', 'a') as config_file:
            config_file.write(u"""\
{remote_line}
\turl = {snapshot_repo}
\tfetch = +refs/heads/*:refs/remotes/cotton/*
""".format(remote_line=remote_line, snapshot_repo=snapshot_repo).encode('utf-8'))

if __name__ == '__main__':
    main()
